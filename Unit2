Unit 2 Collegeboard  notes: 

A class is a blueprint for creating objects with the same behavior and defined attributes

An objects is specific centity , made from a class, you can manipÄ±late in your program 

Objects are instances of classes with variables used to name them

Each object has behaviors and attributes that are defined by the class that was used to create it

We can have more than 1 contructor for an object. This is called overloading the constructor

Methods define the behaviors for all objects of a class and consist of a set of instructions for executing the behavior

Objects - Instances of Classes: Objects represent instances of classes, essentially realizations of the blueprints defined by classes.

Creating and Storing Objects (Instantiation): This is about making objects from classes, like baking cookies using a cookie cutter.

Calling a Void Method: Void methods are like one-way streets; you can call them, but they won't give you anything back.

Calling a Void Method with Parameters: Adding parameters to void methods is like telling your friend which street to take when you give them directions.

Calling a Non-void Method: Unlike void methods, non-void ones give you something back, like a vending machine that dispenses candy.

String Objects - Concatenation, Literals, and More: Strings are like Lego blocks; you can put them together in different ways to make something meaningful.

String Methods: These are like special tools for working with strings, letting you do things like find the length or change the case.

Wrapper Classes - Integer and Double: These classes help when you need to treat numbers like objects, which can be useful in certain situations.

Using the Math Class: It's like having a calculator with extra functions; you can use it to do more complex math operations in your programs.
